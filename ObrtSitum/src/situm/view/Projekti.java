/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package situm.view;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import situm.contrelle.ObradaKorisnik;
import situm.contrelle.ObradaMaterijal;
import situm.contrelle.ObradaProjekt;
import situm.contrelle.ObradaRadnik;
import situm.model.Korisnik;
import situm.model.Materijal;
import situm.model.Projekt;
import situm.model.Radnik;
import situm.pomocno.SitumException;

/**
 *
 * @author Tomislav
 */
public class Projekti extends javax.swing.JFrame {
    
    private final ObradaProjekt obradaEntitet;
    private final ObradaRadnik obradaRadnik;
    private final ObradaMaterijal obradaMaterijal;
    private static DefaultComboBoxModel<Korisnik> modelKorisnik;
    private DecimalFormat format;
    private Projekt projekt;

    /**
     * Creates new form Projekti
     */
    public Projekti() {
        
        initComponents();
        obradaEntitet = new ObradaProjekt();
        obradaMaterijal = new ObradaMaterijal();
        obradaRadnik = new ObradaRadnik();
        
         DefaultComboBoxModel<Korisnik> ms = new DefaultComboBoxModel<>();
        Korisnik sm = new Korisnik();
        sm.setSifra(0);
        sm.setKorisnik("Odaberite Korisnika");
        ms.addElement(sm);
        new ObradaKorisnik().getLista().forEach((s) -> {
            ms.addElement(s);
        });
        cmbKorisnik.setModel(ms);
        
        dtpDatumPocetka.setLocale(new Locale("hr", "HR"));
        dtpDatumPocetka.getSettings().setTranslationToday("Danas");
        dtpDatumPocetka.getSettings().setTranslationClear("Poništi");
        dtpDatumPocetka.getSettings().setFormatForDatesCommonEra("dd. MMMM yyyy.");
        dtpDatumPocetka.getSettings().setFormatForDatesBeforeCommonEra("dd. MMMM uuuu.");
        
         dtpDatumZavrsetka.setLocale(new Locale("hr", "HR"));
        dtpDatumZavrsetka.getSettings().setTranslationToday("Danas");
        dtpDatumZavrsetka.getSettings().setTranslationClear("Poništi");
        dtpDatumZavrsetka.getSettings().setFormatForDatesCommonEra("dd. MMMM yyyy.");
        dtpDatumZavrsetka.getSettings().setFormatForDatesBeforeCommonEra("dd. MMMM uuuu.");
        
         NumberFormat nf = NumberFormat.getInstance( new Locale("hr"));
        
        format = (DecimalFormat) nf;
        format.applyPattern("#,###.00");
        

        ucitajPodatke();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRadnikUBazi = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstRadnikUProjektu = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstMaterijalUBazi = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstMaterijalUProjektu = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUvjetRadnik = new javax.swing.JTextField();
        txtUvjetMaterijal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        dtpDatumPocetka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel7 = new javax.swing.JLabel();
        dtpDatumZavrsetka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel8 = new javax.swing.JLabel();
        txtCijena = new javax.swing.JTextField();
        cmbKorisnik = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtKomentar = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        btnDodajRadnikaNaProjekt = new javax.swing.JButton();
        btnOduzmiRadnikaSProjekta = new javax.swing.JButton();
        DodajMaterijalNaProjekt = new javax.swing.JButton();
        btnOduzmiMaterijalSProjekta = new javax.swing.JButton();
        chbLimitarRadnika = new javax.swing.JCheckBox();
        chbMaterijal = new javax.swing.JCheckBox();
        btnDodaj = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnOcistiPolja = new javax.swing.JButton();
        btnKreirajUgovor = new javax.swing.JButton();
        btnKreirajObracun = new javax.swing.JButton();
        txtBrojSati = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtKolicinaMaterijala = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jScrollPane2.setViewportView(lstRadnikUBazi);

        lstRadnikUProjektu.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRadnikUProjektuValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstRadnikUProjektu);

        jScrollPane4.setViewportView(lstMaterijalUBazi);

        jScrollPane5.setViewportView(lstMaterijalUProjektu);

        jLabel1.setText("Radnik u Bazi");

        jLabel2.setText("Radnik u Projektu");

        jLabel3.setText("Materijal u Bazi");

        jLabel4.setText("Materijal u Projektu");

        txtUvjetRadnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUvjetRadnikActionPerformed(evt);
            }
        });

        txtUvjetMaterijal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUvjetMaterijalActionPerformed(evt);
            }
        });

        jLabel5.setText("Naziv");

        jLabel6.setText("Datum Početka");

        jLabel7.setText("Datum Završetka");

        jLabel8.setText("Cijena");

        jLabel9.setText("Korisnik");

        txtKomentar.setColumns(20);
        txtKomentar.setRows(5);
        jScrollPane6.setViewportView(txtKomentar);

        jLabel10.setText("Komentar");

        btnDodajRadnikaNaProjekt.setText("Dodaj na Projekt");
        btnDodajRadnikaNaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajRadnikaNaProjektActionPerformed(evt);
            }
        });

        btnOduzmiRadnikaSProjekta.setText("Oduzmi s Projekta");
        btnOduzmiRadnikaSProjekta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOduzmiRadnikaSProjektaActionPerformed(evt);
            }
        });

        DodajMaterijalNaProjekt.setText("Dodaj na Projekt");
        DodajMaterijalNaProjekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodajMaterijalNaProjektActionPerformed(evt);
            }
        });

        btnOduzmiMaterijalSProjekta.setText("Oduzmi s Projekt");
        btnOduzmiMaterijalSProjekta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOduzmiMaterijalSProjektaActionPerformed(evt);
            }
        });

        chbLimitarRadnika.setText("Limitar na 20");

        chbMaterijal.setText("Limitar na 20");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnOcistiPolja.setText("Očisti Polja");
        btnOcistiPolja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOcistiPoljaActionPerformed(evt);
            }
        });

        btnKreirajUgovor.setText("Kreiraj Ugovor");
        btnKreirajUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajUgovorActionPerformed(evt);
            }
        });

        btnKreirajObracun.setText("Izračunaj Obračun");
        btnKreirajObracun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajObracunActionPerformed(evt);
            }
        });

        txtBrojSati.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBrojSati.setText("0.0");
        txtBrojSati.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel11.setText("Broj sati na Projektu");

        txtKolicinaMaterijala.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtKolicinaMaterijala.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtKolicinaMaterijala.setText("0.0");

        jLabel12.setText("Količina materijala na Projektu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(dtpDatumPocetka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addComponent(dtpDatumZavrsetka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addComponent(txtCijena)
                        .addComponent(cmbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDodajRadnikaNaProjekt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOduzmiRadnikaSProjekta)
                            .addComponent(txtBrojSati, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtUvjetRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chbLimitarRadnika)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUvjetMaterijal, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(DodajMaterijalNaProjekt)
                                            .addComponent(btnOduzmiMaterijalSProjekta)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chbMaterijal)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtKolicinaMaterijala, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(8, 8, 8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnDodaj)
                        .addGap(33, 33, 33)
                        .addComponent(btnPromjeni)
                        .addGap(31, 31, 31)
                        .addComponent(btnObrisi)
                        .addGap(125, 125, 125)
                        .addComponent(btnKreirajUgovor, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(btnKreirajObracun, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnOcistiPolja)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel2))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel6)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dtpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel7)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dtpDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(27, 27, 27)
                                                    .addComponent(jLabel8)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txtCijena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(23, 23, 23)
                                                    .addComponent(jLabel9)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(cmbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(12, 12, 12)
                                                    .addComponent(jLabel10)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jScrollPane1)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(16, 16, 16)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtUvjetMaterijal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(chbMaterijal)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane4)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(57, 57, 57)
                                                    .addComponent(DodajMaterijalNaProjekt)
                                                    .addGap(97, 97, 97)
                                                    .addComponent(btnOduzmiMaterijalSProjekta)
                                                    .addGap(110, 110, 110)
                                                    .addComponent(jLabel12)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txtKolicinaMaterijala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chbLimitarRadnika)
                                    .addComponent(txtUvjetRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(btnDodajRadnikaNaProjekt)
                                        .addGap(92, 92, 92)
                                        .addComponent(btnOduzmiRadnikaSProjekta)
                                        .addGap(105, 105, 105)
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBrojSati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPromjeni)
                            .addComponent(btnObrisi)
                            .addComponent(btnDodaj))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKreirajUgovor)
                            .addComponent(btnKreirajObracun))
                        .addGap(7, 7, 7)))
                .addComponent(btnOcistiPolja)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
         if (evt.getValueIsAdjusting()) {
            return;
        }

        ocistiPolja();

        projekt = lstEntiteti.getSelectedValue();

        if (projekt == null) {
            return;
        }

        txtNaziv.setText(projekt.getNaziv());
        txtCijena.setText(format.format(projekt.getCijena()));
        txtKomentar.setText(projekt.getKometnar());
        //System.out.println(g.getDatumPocetka().getClass().getName());
        if (projekt.getDatumpocetka()!= null) {
            Date dt = new Date(projekt.getDatumpocetka().getTime());
            LocalDate d = dt.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            dtpDatumPocetka.setDate(d);
        }
         if (projekt.getDatumzavrsetka()!= null) {
            Date dt = new Date(projekt.getDatumzavrsetka().getTime());
            LocalDate d = dt.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            dtpDatumZavrsetka.setDate(d);
        }
        

        //1. način
        //cmbSmjerovi.setSelectedItem(g.getSmjer());
        //2. način
        modelKorisnik = (DefaultComboBoxModel<Korisnik>) cmbKorisnik.getModel();
        for (int i = 0; i < modelKorisnik.getSize(); i++) {
            if (modelKorisnik.getElementAt(i).getSifra() == projekt.getKorisnik().getSifra()) {
                cmbKorisnik.setSelectedIndex(i);
                break;
            }
        }

      

        ucitajRadnike(projekt);
        ucitajMaterijal(projekt);
    }//GEN-LAST:event_lstEntitetiValueChanged

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Projekt p = new Projekt();
        p = preuzmiVrijednosti(p);
        spremi(p);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        projekt = lstEntiteti.getSelectedValue();
        if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }
        projekt = preuzmiVrijednosti(projekt);
        spremi(projekt);
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        projekt = lstEntiteti.getSelectedValue();
        if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }
        try {
            obradaEntitet.obrisi(projekt);
            ocistiPolja();
            ucitajPodatke();
        } catch (SitumException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void txtUvjetRadnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUvjetRadnikActionPerformed
        ucitajRadnike();
    }//GEN-LAST:event_txtUvjetRadnikActionPerformed

    private void txtUvjetMaterijalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUvjetMaterijalActionPerformed
        ucitajMaterijale();
    }//GEN-LAST:event_txtUvjetMaterijalActionPerformed

    private void btnOcistiPoljaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOcistiPoljaActionPerformed
        ocistiPolja();
    }//GEN-LAST:event_btnOcistiPoljaActionPerformed

    private void btnDodajRadnikaNaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajRadnikaNaProjektActionPerformed
        if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }

        lstRadnikUBazi.getSelectedValuesList().forEach((p) -> {

            boolean postoji = false;
            for (int i = 0; i < lstRadnikUProjektu.getModel().getSize(); i++) {
                if (p.getSifra() == lstRadnikUProjektu.getModel().getElementAt(i).getSifra()) {
                    postoji = true;
                    break;
                }
            }
            if (!postoji) {
                projekt.getRadnik().add(p);
                //p.getGrupe().add(grupa);
            }

        });

        ucitajRadnike(projekt);
    }//GEN-LAST:event_btnDodajRadnikaNaProjektActionPerformed

    private void btnOduzmiRadnikaSProjektaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOduzmiRadnikaSProjektaActionPerformed
              if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }
        
        List<Integer> zaBrisanje = new ArrayList<>();
        lstRadnikUProjektu.getSelectedValuesList().forEach((p)->{zaBrisanje.add(p.getSifra());});
        
        
        for(int i=0;i<projekt.getRadnik().size();i++){
            for(int b : zaBrisanje){
                if(projekt.getRadnik().get(i).getSifra()==b){
                   projekt.getRadnik().remove(i);
                   break;
                }
            }
        }
        
         ucitajRadnike(projekt);
    }//GEN-LAST:event_btnOduzmiRadnikaSProjektaActionPerformed

    private void DodajMaterijalNaProjektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodajMaterijalNaProjektActionPerformed
          if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }

        lstMaterijalUBazi.getSelectedValuesList().forEach((p) -> {

            boolean postoji = false;
            for (int i = 0; i < lstMaterijalUProjektu.getModel().getSize(); i++) {
                if (p.getSifra() == lstMaterijalUProjektu.getModel().getElementAt(i).getSifra()) {
                    postoji = true;
                    break;
                }
            }
            if (!postoji) {
                projekt.getMaterijal().add(p);
                //p.getGrupe().add(grupa);
            }

        });

        ucitajMaterijal(projekt);
    }//GEN-LAST:event_DodajMaterijalNaProjektActionPerformed

    private void btnOduzmiMaterijalSProjektaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOduzmiMaterijalSProjektaActionPerformed
         if (projekt == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite projekt");
            return;
        }
        
        List<Integer> zaBrisanje = new ArrayList<>();
        lstMaterijalUProjektu.getSelectedValuesList().forEach((p)->{zaBrisanje.add(p.getSifra());});
        
        
        for(int i=0;i<projekt.getMaterijal().size();i++){
            for(int b : zaBrisanje){
                if(projekt.getMaterijal().get(i).getSifra()==b){
                   projekt.getMaterijal().remove(i);
                   break;
                }
            }
        }
        
         ucitajMaterijal(projekt);
    }//GEN-LAST:event_btnOduzmiMaterijalSProjektaActionPerformed

    private void btnKreirajUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajUgovorActionPerformed
       
        Korisnik korisnik = (Korisnik) cmbKorisnik.getSelectedItem();
        if(korisnik==null){
            return;
        }
        
      
        
        Projekt projekt = lstEntiteti.getSelectedValue();
        if(projekt==null){
            //odaberi polaznika
            return;
        }
        
        try {
            XWPFDocument document = new XWPFDocument(new FileInputStream(new File("ZlatkoUgovor.docx")));
            
            for (XWPFParagraph p : document.getParagraphs()) {
    List<XWPFRun> runs = p.getRuns();
    if (runs != null) {
        for (XWPFRun r : runs) {
            String text = r.getText(0);
            if (text != null && text.contains("<<korisnik>>")) {
                text = text.replace("<<korisnik>>", korisnik.getKorisnik());
                r.setText(text, 0);
            }
            
            if (text != null && text.contains("<<projekt>>")) {
                text = text.replace("<<projekt>>", projekt.getNaziv());
                r.setText(text, 0);
            }
            
            if (text != null && text.contains("<<cijena>>")) {
                text = text.replace("<<cijena>>", projekt.getCijena().toString());
                r.setText(text, 0);
            }
        }
    }
}
            
            JFileChooser j = new JFileChooser();
            if(j.showSaveDialog(getParent())==JFileChooser.APPROVE_OPTION){
            try{
            document.write(new FileOutputStream(j.getSelectedFile()));
            document.close();
            }
            catch(Exception e){
            System.err.println("An exception occured in creating the DOCX document."+ e.getMessage());
            }
            }
            
              } catch (IOException ex) {
            
        }
        
    }//GEN-LAST:event_btnKreirajUgovorActionPerformed

    private void btnKreirajObracunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajObracunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnKreirajObracunActionPerformed

    private void lstRadnikUProjektuValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRadnikUProjektuValueChanged
         if (evt.getValueIsAdjusting()) {
            return;
        }

        Radnik i = lstRadnikUProjektu.getSelectedValue();
        DefaultListModel<Projekt> m = new DefaultListModel<>();
            
        try {
             List<Projekt> projekti;
             projekti = obradaEntitet.getLista(i.getId());
             projekti.forEach((o) -> {
            m.addElement(o);
        });
        } catch (Exception e) {
        }
       

//        Collections.sort(obracuni, new Comparator<Obracun>() {
//
//            public int compare(Obracun s1, Obracun s2) {
//                return s1.getRadnik().getPrezime().compareTo(s2.getRadnik().getPrezime());
//            }
//        });
        

        lstRadnikUProjektu.setModel(m);
        lstRadnikUProjektu.setCellRenderer(new ObracunRenderer());
    }//GEN-LAST:event_lstRadnikUProjektuValueChanged

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DodajMaterijalNaProjekt;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajRadnikaNaProjekt;
    private javax.swing.JButton btnKreirajObracun;
    private javax.swing.JButton btnKreirajUgovor;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOcistiPolja;
    private javax.swing.JButton btnOduzmiMaterijalSProjekta;
    private javax.swing.JButton btnOduzmiRadnikaSProjekta;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JCheckBox chbLimitarRadnika;
    private javax.swing.JCheckBox chbMaterijal;
    private javax.swing.JComboBox<Korisnik> cmbKorisnik;
    private com.github.lgooddatepicker.components.DatePicker dtpDatumPocetka;
    private com.github.lgooddatepicker.components.DatePicker dtpDatumZavrsetka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JList<Projekt> lstEntiteti;
    private javax.swing.JList<Materijal> lstMaterijalUBazi;
    private javax.swing.JList<Materijal> lstMaterijalUProjektu;
    private javax.swing.JList<Radnik> lstRadnikUBazi;
    private javax.swing.JList<Radnik> lstRadnikUProjektu;
    private javax.swing.JTextField txtBrojSati;
    private javax.swing.JTextField txtCijena;
    private javax.swing.JTextField txtKolicinaMaterijala;
    private javax.swing.JTextArea txtKomentar;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtUvjetMaterijal;
    private javax.swing.JTextField txtUvjetRadnik;
    // End of variables declaration//GEN-END:variables

    private void ucitajPodatke() {
         DefaultListModel<Projekt> m = new DefaultListModel<>();
        obradaEntitet.getLista().forEach((g) -> {
            m.addElement(g);
        });
        lstEntiteti.setModel(m);
    }

    private void ocistiPolja() {
       txtNaziv.setText("");
        cmbKorisnik.setSelectedIndex(0);
        lstRadnikUProjektu.setModel(new DefaultListModel<>());
        dtpDatumPocetka.setDate(null);
        dtpDatumZavrsetka.setDate(null);
        lstMaterijalUProjektu.setModel(new DefaultListModel<>());
    }

    private void ucitajRadnike(Projekt r) {
      DefaultListModel<Radnik> m = new DefaultListModel<>();

        r.getRadnik().forEach((p) -> {

            m.addElement(p);

        });
        lstRadnikUProjektu.setModel(m);
    }

    private void ucitajMaterijal(Projekt r) {
              DefaultListModel<Materijal> m = new DefaultListModel<>();

        r.getMaterijal().forEach((p) -> {

            m.addElement(p);

        });
        lstMaterijalUProjektu.setModel(m);
    }

    private Projekt preuzmiVrijednosti(Projekt p) {
         p.setNaziv(txtNaziv.getText());
         p.setKometnar(txtKomentar.getText());
         
         
        p.setKorisnik((Korisnik) cmbKorisnik.getSelectedItem());
       try {
            p.setCijena(
                    new BigDecimal(
                            format.parse(txtCijena.getText()).floatValue()
                    )
            );
        } catch (Exception e) {
           p.setCijena(BigDecimal.ZERO);
           txtCijena.setText("0");
        }
        try {
            Date date = Date.from(dtpDatumPocetka.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant());
            p.setDatumpocetka(date);
        } catch (Exception e) {
            p.setDatumpocetka(null);
        }
        try {
            Date date = Date.from(dtpDatumZavrsetka.getDate().atStartOfDay(ZoneId.systemDefault()).toInstant());
            p.setDatumzavrsetka(date);
        } catch (Exception e) {
            p.setDatumzavrsetka(null);
        }
        
        
        return p;
    }

    private void spremi(Projekt p) {
        try {
            obradaEntitet.spremi(p);
            ocistiPolja();
            ucitajPodatke();
        } catch (SitumException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void ucitajRadnike() {
         if (chbLimitarRadnika.isSelected()) {
            DefaultListModel<Radnik> m = new DefaultListModel<>();
            for (Radnik s : obradaRadnik.getLista(txtUvjetRadnik.getText().trim(), chbLimitarRadnika.isSelected())) {
                m.addElement(s);
            }
            lstRadnikUBazi.setModel(m);
        } else {
            DefaultListModel<Radnik> m = new DefaultListModel<>();
            Radnik p = new Radnik();
            p.setIme("Molim");
            p.setPrezime("pričekati");
            m.addElement(p);
            lstRadnikUBazi.setModel(m);
            Projekti.DuzeUcitanjeRadnika d = new Projekti.DuzeUcitanjeRadnika();
            d.start();
        }
    }

    private void ucitajMaterijale() {
        if (chbMaterijal.isSelected()) {
            DefaultListModel<Materijal> m = new DefaultListModel<>();
            for (Materijal s : obradaMaterijal.getLista(txtUvjetMaterijal.getText().trim(), chbMaterijal.isSelected())) {
                m.addElement(s);
            }
            lstMaterijalUBazi.setModel(m);
        } else {
            DefaultListModel<Materijal> m = new DefaultListModel<>();
            Materijal p = new Materijal();
            p.setMaterijal("Molim pričekati");
            m.addElement(p);
            lstMaterijalUBazi.setModel(m);
            Projekti.DuzeUcitanjeMaterijal d = new Projekti.DuzeUcitanjeMaterijal();
            d.start();
        }
    }

    private static class ObracunRenderer implements ListCellRenderer<? super Radnik> {

        public ObracunRenderer() {
        }
    }

    private class DuzeUcitanjeMaterijal extends Thread{
        @Override
        public void run() {
            DefaultListModel<Materijal> m = new DefaultListModel<>();
            for (Materijal s : obradaMaterijal.getLista(txtUvjetMaterijal.getText().trim(), chbMaterijal.isSelected())) {
                m.addElement(s);
            }
            lstMaterijalUBazi.setModel(m);
        }
    }

    private class DuzeUcitanjeRadnika extends Thread{
        @Override
        public void run() {
            DefaultListModel<Radnik> m = new DefaultListModel<>();
            for (Radnik s : obradaRadnik.getLista(txtUvjetRadnik.getText().trim(), chbLimitarRadnika.isSelected())) {
                m.addElement(s);
            }
            lstRadnikUBazi.setModel(m);
        }
    }
}
